import {
  StyleSheet,
  Text,
  View,
  TextInput,
  Button,
  TouchableHighlight,
  TouchableNativeFeedback,
  TouchableOpacity,
  ScrollView,
  Dimensions,
} from "react-native";

export default function App() {
  const [text, setText] = useState("nombre");
  const [test, setTest] = useState("mensaje");
  const [submit, setSubmit] = useState("");

<ScrollView style={styles.scrollView}>
        <Text>Hola Mundo:{submit}</Text>

        <TextInput
          style={styles.input}
          placeholder="Escribe aqui"
          onChangeText={(t) => setText(t)}
        />
        <TextInput
          style={styles.input2}
          placeholder="Escribe aqui algo lindo"
          onChangeText={(tt) => setTest(tt)}
        />
        <Text>{test}</Text>

        <Button
          onPress={() => {
            setSubmit(text);
            alert("Texto enviado con exito");
          }}
          title="Aceptar"
        />
        <TouchableHighlight
          underlayColor={"#9A275A"}
          activeOpacity={0.2}
          onPress={() => {
            setSubmit(text);
            alert("Texto enviado con exito");
          }}
        >
          <Text>Aceptar</Text>
        </TouchableHighlight>

        <TouchableNativeFeedback
          background={TouchableNativeFeedback.Ripple("#9A275A", true)}
          onPress={() => {
            setSubmit(text);
            alert("Texto enviado con exito");
          }}
        >
          <View style={styles.view}>
            <Text>Aceptar</Text>
          </View>
        </TouchableNativeFeedback>

        <TouchableOpacity
          style={styles.TouchableOpacity}
          onPress={() => {
            setSubmit(text);
            alert("Texto enviado con exito");
          }}
        >
          <View style={styles.view}>
            <Text>Aceptar</Text>
          </View>
        </TouchableOpacity>
      </ScrollView>

      const styles = StyleSheet.create({
  TouchableOpacity: {
    backgroundColor: "#998FC7",
  },
  view: {
    height: 50,
    width: 200,
    alignItems: "center",
    justifyContent: "center",
  },
  input: {
    height: 40,
    borderBottomColor: "#843B62",
    borderBottomWidth: 1,
    width: "100%",
    margin: 20,
  },
  input2: {
    height: 40,
    backgroundColor: "#FFB997",
    width: "100%",
  }, scrollView: {
    width: Dimensions.get("window").width,
  },

  //LISTAS: 
  <FlatList
        data={}
        renderItem={({ item }) => <Text style={styles.item}>{item.name}</Text>}
      />

       <SectionList
        sections={[
          {
            title: "GRUPO1",
            data: [
              { key: "1", name: "Nicolas" },
            ]},
        ]}
        renderItem={({ item }) => <Text style={styles.item}>{item.name}</Text>}
        renderSectionHeader={({ section }) => (
          <Text style={styles.section}>{section.title}</Text>

//LLAMADAS A API REST 
const [users, setUsers] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch("http://jsonplaceholder.typicode.com/users")
      .then((response) => response.json())
      .then((data) => {
        setUsers(data);
        setLoading(false);
      });
  }, []);

  if (loading) {
    return (
      <View style={styles.center}>
        <Text>Cargando...</Text>
      </View>
    );
  }
   <FlatList
        data={users}
        renderItem={({ item }) => <Text style={styles.item}>{item.name}</Text>}
        keyExtractor={(item) => String(item.id)}
      />

//MODAL
<Modal animationType="slide" transparent={true} visible={modal}>
        <View style={styles.center}>
          <View style={styles.content}>
            <Text>Soy un modal</Text>
            <Button title="Cerrar modal" onPress={() => setModal(!modal)} />
          </View>
        </View>
      </Modal>
      <Button
        style={styles.button}
        title="Abrir modal"
        onPress={() => setModal(!modal)}
      />

 //ALERTA
 const crearDialogo = () =>
  Alert.alert(
    "Titulo",
    "mensaje qie aprermsodkncsdnvijsnvikjc",
    [
      {
        text: "Cancelar",
        onPress: () => {},
        style: "cancel",
      },
      {
        text: "Aceptar",
        onPress: () => console.log("boton presonado"),
      },
    ],
    { cancelable: false }
  );     